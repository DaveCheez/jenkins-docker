# Copyright (c) 2017 Google Inc.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

# Used with http://github.com/GoogleCloudPlatform/runtimes-common/tree/master/docgen
_templates:
- &Image launcher.gcr.io/google/jenkins2
- &PullCommand gcloud docker -- pull launcher.gcr.io/google/jenkins2
- &ServiceName
  name: jenkins
- &ImageName
  image: *Image
- &ServiceArgs
  <<: *ServiceName
  <<: *ImageName
- &Ports
  exposedPorts:
  - port: 8080
  - port: 50000
- &BaseServerRun
  <<: *ServiceArgs
  <<: *Ports
- &BaseExec
  containerFromRun: *BaseServerRun
  execType: INTERACTIVE_SHELL
overview:
  description: |-
    This image contains an installation Jenkins 2.x.

    For more information, see the
    [Official Image Launcher Page](https://console.cloud.google.com/launcher/details/google/jenkins2).
  dockerfileUrl: https://github.com/GoogleCloudPlatform/jenkins-docker/tree/master/2/2.32
  pullCommand: *PullCommand

taskGroups:

- title: Running Jenkins server
  description: This section describes how to spin up a Jenkins service using this image.
  tasks:
  - title: Starting a Jenkins instance
    runtimes: [DOCKER, KUBERNETES]
    instructions:
    - run: *BaseServerRun
    - description: Jenkins server is accessible on port 8080.
      applicableRuntimes: [DOCKER]
    - description: >-
        To retain Jenkins data across container restarts, see
        [](#adding-persistence).
    - description: >-
        See [](#configurations) for how to customize your Jenkins
        service instance.
  - title: Adding persistence
    # TODO: Add support for Kubernetes. The blocker is that the volume
    # is being created as root and Jenkins can't write to it.
    # https://github.com/kubernetes/kubernetes/issues/2630
    runtimes: [DOCKER]
    instructions:
    - description: >-
        All Jenkins data lives in `/var/jenkins_home`, including plugins
        and configurations. This directory should be mounted on a persistent
        volume to survive container restarts.
    - description: >-
        Assume `/path/to/jenkins/home` is the persistent directory
        on your host.
      applicableRuntimes: [DOCKER]
    - run:
        <<: *BaseServerRun
        volumes:
        - name: jenkinsdata
          path: /var/jenkins_home
          emptyPersistentVolume:
            hostPath: /path/to/jenkins/home
            subPath: jenkins_home

- title: Configurations
  anchorId: configurations
  tasks:
  - title: First log in
    runtimes: [DOCKER, KUBERNETES]
    instructions:
    - description: >-
        View the generated administrator password to log in.
      exec:
        <<: *BaseExec
        execType: ONESHOT
        command: cat /var/jenkins_home/secrets/initialAdminPassword
  - title: Passing JVM arguments
    runtimes: [DOCKER, KUBERNETES]
    instructions:
    - description: >-
        JVM arguments can be passed via environment variable `JAVA_OPTS`.
        For example, the following increases heap size to 2G and PermGen
        size to 128M.
      run:
        <<: *BaseServerRun
        environment:
          JAVA_OPTS:
            value: -Xmx2G -XX:MaxPermSize=128m

- title: Maintenance
  tasks:
  - title: Creating a Jenkins backup
    runtimes: [DOCKER, KUBERNETES]
    instructions:
    - description: >-
        You can simply copy `/var/jenkins_home` directory on the container
        to `/path/to/your/jenkins/home` directory on your host.
      copy:
        direction: FROM_CONTAINER
        path: /var/jenkins_home
        hostPath: /path/to/your/jenkins/home
        containerFromRun: *BaseServerRun

volumeReference:
  volumes:
  - path: /var/jenkins_home
    description: Stores all of Jenkins plugins and configurations.

portReference:
  ports:
  - port: '8080'
    description: Jenkins console port.
  - port: '50000'
    description: Slave agent communication port.
